### DONE ####
agent blue print
flask server that handles requests to the database and takes care of tokens
working cli that communicates to database and allows execution of commands
Create Bash Setup Script To Run Docker and create initial admin password -> setup.sh 
Then it tells you to run black tabby cli pythons script to create database and view -> have blacktabby start flask in the background
Then it runs flask server for you -> have blacktabby start flask in the background
created horrible c agent, using libcurl and json-c it works but its terrible
for all agents add initial shell commands that will be in original json document aka os user ip 
powershell agent remove print statements, add error checking, so far its working pretty decently
powershell is missing error checking but it seems to be working pretty fine so no need as c# should be main agent anyways.
create C# agent
have BlackTabby have a create agent option. where you can provide the type,ip and server and use pyinstaller to create the elf binary

##### TO DO ####
Add error handling to powershell agent with try catch so when agent is deleted via blacktabby cli when server error 400 or 500 occurs agent exits immediately
Create dropper (could be powershell/vbscript) that downloads agent and adds Persistence to agent via registry. => windows
create dropper bash script that downloads python agent elf(compile with pyinstaller) and adds persistence to agent => linux
Remove printing of output on agent and server
Create dropper exe that downloads agent and adds Persistence to agent. => windows
Add DNS Functionality to agents

